#!/bin/sh

set -u

#-----------------------------------------------------------------------------
# defs
#-----------------------------------------------------------------------------

here=$(dirname $(readlink -f $0))
. $here/settings.sh
. $here/lib.sh

prog=$(basename $0)

usage(){
    cat <<-EOF
$prog [-S | -k (jpP) | -r (jpP) ] [-w -d]

j = local and remote jackds in netjack2 mode
p = pulseaudio sink "jack_out"
P = pulseaudio service

options:
    -S       : show status
    -k (jpP) : kill stuff
    -r (jpP) : start or restart
    -w       : wifi mode (use more buffering, pay with increased AV delay)
    -d       : debug mode: write a logfile $log_fn on the local and remote
               machine

-r p: when we resume from suspend (to ram) mode, then the jackd connection
(netjack2) is still active and only the pulse sink needs a restart -> no need
to kill the jackds, which takes a bit longer.

examples:

    This is what you call when you need to start all
        $ $prog -r jp

    Check status
        $ $prog -S
        remote jackd    yes
        local jackd     yes
        jack_out sink   yes

    (Re)start all, including pulseaudio
        $ $prog -r jpP

    Disable pulse sink
        $ $prog -k p
        $ $prog -S
        remote jackd    yes
        local jackd     yes
        jack_out sink   NO

    Restart only pulse sink (e.g. after resuming from suspend mode)
        $ $prog -r p

    Activate wifi settings:
        $ $prog -r jp -w
EOF
}


#-----------------------------------------------------------------------------
# main
#-----------------------------------------------------------------------------

# set by cmd line
kill_what=$none
wifi_mode=false
restart_what=$none
check_status=false
debug=false

while getopts k:wr:hSd opt; do
    case $opt in
        k) kill_what=$OPTARG;;
        w) wifi_mode=true;;
        r) restart_what=$OPTARG;;
        S) check_status=true;;
        d) debug=true;;
        h) usage; exit 0;;
        \?) exit 1;;
    esac
done
shift $((OPTIND - 1))

if $wifi_mode; then
    checkopt $restart_what j || err "use -w with -r j; we need to \
(re)start jackd to apply -w"
fi

set_opts $wifi_mode

if $debug; then
    log=$log_fn
    rm -f $log
    $ssh_cmd -- "rm -f $log_fn"
fi

if $check_status; then
    do_check_status
    exit 0
fi

checkopt $kill_what p && stop_pulse_sink
checkopt $kill_what j && stop_jack
checkopt $kill_what P && stop_pulse

checkopt $restart_what P && restart_pulse

if checkopt $restart_what j; then
    check_broken_pulse
    stop_jack_local
    restart_jack_remote
    start_jack_local
fi

checkopt $restart_what p && restart_pulse_sink
